plugins {
    id "org.unbroken-dome.test-sets" version "4.1.0"
}

ext.moduleName = 'what.to.watch.boot'

apply plugin: 'java'
apply plugin: 'org.springframework.boot'
apply plugin: 'io.spring.dependency-management'

sourceCompatibility = "$javaVersion"
targetCompatibility = "$javaVersion"

configurations {
    compile.exclude module: "spring-boot-starter-tomcat"
}

tasks.withType(JavaCompile) {
    options.compilerArgs += "--enable-preview"
}

tasks.withType(Test) {
    jvmArgs += "--enable-preview"
}

tasks.withType(JavaExec) {
    jvmArgs += '--enable-preview'
}

testSets {
    benchmark
}

test {
    useJUnitPlatform()
}

benchmark {
    useJUnitPlatform()
}

dependencies {
    implementation project(":what-to-watch-core")

    implementation("org.springframework.boot:spring-boot-starter-jersey:$springBootVersion")
    implementation("org.glassfish.jersey.media:jersey-media-sse:$jerseyVersion")
    implementation("org.springframework.boot:spring-boot-starter-web:$springBootVersion")
    implementation("org.springframework.boot:spring-boot-starter-undertow:$springBootVersion")
    implementation("org.springframework.boot:spring-boot-starter-actuator:$springBootVersion")
    implementation("io.micrometer:micrometer-registry-jmx:$micrometerVersion")
    implementation("io.micrometer:micrometer-core:$micrometerVersion")
    implementation("redis.clients:jedis:$jedisVersion")
    implementation("org.jsoup:jsoup:$jsoupVersion")
    implementation("com.squareup.okhttp3:okhttp:$okHttpVersion")
    implementation("net.jodah:failsafe:$failsafeVersion")
    implementation("javax.activation:activation:$javaxAnnotationsVersion")
    implementation("javax.xml.bind:jaxb-api:$jaxbVersion")
    implementation("com.github.ben-manes.caffeine:caffeine:$caffeineVersion")
    implementation("com.github.spotbugs:spotbugs-annotations:$spotbugsVersion")
    implementation("org.lz4:lz4-java:$lz4Version")

    testImplementation("org.springframework.boot:spring-boot-starter-test:$springBootVersion")
    testImplementation("org.junit.jupiter:junit-jupiter-api:$junitVersion")
    testImplementation("org.junit.jupiter:junit-jupiter-engine:$junitVersion")
    testImplementation("org.testcontainers:testcontainers:$testcontainersVersion")
    testImplementation("org.testcontainers:junit-jupiter:$testcontainersVersion")

    benchmarkImplementation("org.openjdk.jmh:jmh-core:$jmhVersion")
    benchmarkImplementation("org.openjdk.jmh:jmh-generator-annprocess:$jmhVersion")
}

println("[what-to-watch-boot] Building version: $version")
