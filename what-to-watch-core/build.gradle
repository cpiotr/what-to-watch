plugins {
    id "org.unbroken-dome.test-sets" version "4.0.0"
}

ext.moduleName = 'what.to.watch.core'

apply plugin: 'java'

sourceCompatibility = "$javaVersion"
targetCompatibility = "$javaVersion"

tasks.withType(JavaCompile) {
    options.compilerArgs += "--enable-preview"
}

tasks.withType(Test) {
    jvmArgs += "--enable-preview"
}

tasks.withType(JavaExec) {
    jvmArgs += '--enable-preview'
}

compileJava {
    inputs.property("moduleName", moduleName)
    doFirst {
        options.compilerArgs += ['--module-path', classpath.asPath]
        classpath = files()
    }
}

testSets {
    integrationTest
}

test {
    useJUnitPlatform()
}

integrationTest {
    useJUnitPlatform()
}

check.dependsOn integrationTest
integrationTest.mustRunAfter test

dependencies {
    implementation("org.jsoup:jsoup:$jsoupVersion")
    implementation("com.squareup.okhttp3:okhttp:$okHttpVersion")
    implementation("org.slf4j:slf4j-api:$slf4jVersion")
    implementation("com.fasterxml.jackson.core:jackson-core:$jacksonVersion")
    implementation("com.fasterxml.jackson.core:jackson-databind:$jacksonVersion")
    implementation("io.micrometer:micrometer-core:$micrometerVersion")
    implementation("com.github.ben-manes.caffeine:caffeine:$caffeineVersion")

    testImplementation("ch.qos.logback:logback-classic:$logbackVersion")
    testImplementation("org.junit.jupiter:junit-jupiter-api:$junitVersion")
    testImplementation("org.junit.jupiter:junit-jupiter-engine:$junitVersion")
    testImplementation("org.mockito:mockito-core:$mockitoVersion")
    testImplementation("org.assertj:assertj-core:$assertjVersion")

    integrationTestImplementation sourceSets.test.output
}

println("[what-to-watch-core] Building version: $version")
